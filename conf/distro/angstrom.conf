#@--------------------------------------------------------------------
#@TYPE: Distribution
#@NAME: Angstrom <http://github.com/angstrom-distribution>
#@DESCRIPTION: A flexible Linux Distribution
#@MAINTAINER: Koen Kooi <koen@dominion.thruhere.net>
#@--------------------------------------------------------------------

# Preserve original DISTRO value
USERDISTRO := "${DISTRO}"
DISTRO = "angstrom"
DISTRO_NAME = "Angstrom"

BUILDNAME = "Angstrom ${DISTRO_VERSION}"

TARGET_VENDOR = "-angstrom"
SDK_VENDOR = "-angstromsdk"

DISTRO_VERSION = "2025.06"

TCMODE ?= "default"

# Define a default set of features
DISTRO_FEATURES:append = " alsa bluetooth wifi"
DISTRO_FEATURES:append = " efi largefile pam pni-names"
DISTRO_FEATURES:append = " systemd zeroconf"
DISTRO_FEATURES:append = " opengl vulkan wayland x11"
PACKAGE_CLASSES = "package_ipk"

# The only sane way :)
INIT_MANAGER = "systemd"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_dev_manager  = "udev"

# Under protest, I still think this can and should be built on-demand
require conf/distro/include/yocto-uninative.inc
INHERIT += "uninative"

#Name the generated images in a sane way
IMAGE_NAME = "${DISTRO_NAME}-${IMAGE_BASENAME}-${DISTRO_VERSION}-${MACHINE}"

# Put `deploy` front and center
DEPLOY_DIR = "${TOPDIR}/deploy"
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${MACHINE}"
IMAGE_FSTYPES:append = " tar.gz"
IMAGE_FSTYPES:remove = " tar.xz"

# Undo damage from external layers
TI_COMMON_DEPLOY = "${DEPLOY_DIR}"
DEPLOY_DIR_IMAGE:ti-soc = "${DEPLOY_DIR}/images/${MACHINE}"

# Angstrom *always* has some form of release config, so error out if someone thinks he knows better 
DISTRO_CHECK := "${@d.getVar("DISTRO_VERSION",1) or bb.fatal('Remove this line or set a dummy DISTRO_VERSION if you really want to build an unversioned distro')}"

# Prefer pigz, it's much, much faster on multi-core systems
PREFERRED_PROVIDER_gzip-native = "pigz-native"

